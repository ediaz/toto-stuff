#!/usr/bin/env python

from rsf.proj import *
#import pcsutil,encode
from rsf.recipes import fdmod
from math import *
#-------------------------
par ={
        'dx':4,
        'nshots':500,
        'niter':10,
        'ompnth':7,
        'ntm1':1800
        }
#-------------------------
par['scale']=(1*par['dx']/(1*997.813))
OpenSeis = '$CWPROOT/OpenSource/bin/'

#----------------------------------------
# Here you remove first arrivals (which reduces artifacts from the normalization):
Flow('Ru1',['data/avelu1.rsf','data/adiru1.rsf'],
    '''
    math d=${SOURCES[1]} output="input-d"
    ''')

Flow('REFL','Ru1',
  '''
  scale rscale=%(scale)g |
  pad beg1=%(ntm1)d |put o1=-1.800|
  fft1 
  '''%par)

## first arrival from finite difference modeling (time reversed)
Flow('tf','fa','pad beg1=1800|put o1=-1.8')
Flow('tf1','farrival',
	'''
	pad beg1=1800|put o1=-1.800 |
        fft1 |math output="conj(input)" | fft1 inv=y
	'''%par) 
Result('tf','grey')
Result('tf1','grey')



for model in [0.8,1.0]:
  perc = 'perc_%03d'%(model*100)
  
  for z in range(0,1000,20):
    fa = 'data/farrival_z%03d'%z+'_'+perc
    tf = 'tf_z%03d'%z+'_'+perc
    Flow(tf,fa,'pad beg1=1800|put o1=-1.8')
    
    Flow(['Gp3_z%03d'%z+'_'+perc,'Gm3_z%03d'%z+'_'+perc,'G3_z%03d'%z+'_'+perc],[tf,'REFL'],
          '''
          ./sfG_autofocus_toto2 refl=${SOURCES[1]}
          conj=y twin=y Pf1=y PG=y ompnth=%d niter=%d nshots=%d 
          scale=%g eps=%g shift=%d verb=y r=%d tap=%d
          Gm=${TARGETS[1]} G=${TARGETS[2]}  
          ''' % (par['ompnth'],par['niter'],par['nshots'],1.0,1e-4,-21,-1,151))

  Gp = 'Gp_'+perc
  Gm = 'Gm_'+perc 
  Flow(Gp,map(lambda x:'Gp3_z%03d_'%x+perc,range(0,1000,20)),
    'cat axis=3 ${SOURCES[1:%d]} | put d3=20 o1=0 |sftransp plane=13 memsize=1000'%len(range(0,1000,20)))

  Flow(Gm,map(lambda x:'Gm3_z%03d_'%x+perc,range(0,1000,20)),
    'cat axis=3 ${SOURCES[1:%d]} | put d3=20 o1=0 |sftransp plane=13 memsize=1000'%len(range(0,1000,20)))

  Flow('img_'+perc,[Gp,Gm],'add mode=p ${SOURCES[1]} |stack axis=3 |sinc d1=4 o1=0 n1=250')



End()


/* This file is automatically generated. DO NOT EDIT! */

#ifndef _fdutil_h
#define _fdutil_h


typedef struct fdm2 *fdm2d;


typedef struct lcoef2 *lint2d;


typedef struct abc2 *abcone2d;


typedef struct spon *sponge;


struct fdm2{
	int nb;
	int   nz,nzpad;
	int   nx,nxpad;
	float oz,ozpad;
	float ox,oxpad;
	float dz;
	float dx;
	bool verb;
	bool free;
	int ompchunk;
	int nop;
};


struct lcoef2{
    int n;
    float *w00;
    float *w01;
    float *w10;
    float *w11;
    int *jz;
    int *jx;
};


struct abc2{
    bool free;
    float *bzl;
    float *bzh;
    float *bxl;
    float *bxh;
};


struct spon{
    float *w;
};


/*------------------------------------------------------------*/
fdm2d fdutil_init(	bool verb_, 
					bool free_,
					sf_axis az_, 
					sf_axis ax_, 
					int     nb_,
					int ompchunk_,
					int nop_);
/*< init fdm utilities >*/


/*------------------------------------------------------------*/
void expand(float *a, 
			float *b, 
			fdm2d fdm);
/*< expand domain >*/


/*------------------------------------------------------------*/
void cut2d( float *a,
			float *b,
			fdm2d  fdm,
			sf_axis cz, 
			sf_axis cx);
/*< cut a rectangular wavefield subset >*/


/*------------------------------------------------------------*/
void bfill(float** b, 
	   fdm2d fdm);
/*< fill boundaries >*/


/*------------------------------------------------------------*/
lint2d lint2d_make(	int na, 
					pt2d *aa, 
					fdm2d fdm);
/*< init 2D linear interpolation >*/


/*------------------------------------------------------------*/
void lint2d_hold(float**uu,
		 float *ww,
		 lint2d ca);
/*< hold fixed value in field >*/


/*------------------------------------------------------------*/
void lint2d_inject( float *uu,
					float *ww,
					float scal,
					lint2d ca,
				fdm2d fdm);
/*< inject into wavefield >*/


/*------------------------------------------------------------*/
void lint2d_extract(float *uu,
					float *dd,
					lint2d ca,
					fdm2d fdm);
/*< extract from wavefield >*/


/*------------------------------------------------------------*/
void fdbell_init(int n);
/*< init bell taper >*/


/*------------------------------------------------------------*/
void lint2d_bell(float**uu,
		 float *ww,
		 lint2d ca);
/*< apply bell taper >*/


/*------------------------------------------------------------*/
abcone2d abcone2d_make(	float	dt,
		       			float	*vv,
		       			bool	free, 
		       			fdm2d   fdm);
/*< init 2D ABC >*/


/*------------------------------------------------------------*/
void abcone2d_apply(float *a,
					float *b,
					abcone2d abc,
					fdm2d    fdm);
/*< apply 2D ABC >*/


/*------------------------------------------------------------*/
sponge sponge_make(fdm2d fdm);
/*< init boundary sponge >*/


/*------------------------------------------------------------*/
void sponge2d_apply(float *a,
					float *b, 
					sponge   spo,
					fdm2d    fdm);
/*< apply boundary sponge >*/

#endif
